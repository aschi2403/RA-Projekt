$date
  Wed Jun 22 17:16:12 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module checkresultpkg $end
$var reg 32 ! g_dmem_128[31:0] $end
$var reg 32 " g_dmem_129[31:0] $end
$var reg 32 # g_dmem_130[31:0] $end
$var reg 32 $ g_dmem_131[31:0] $end
$upscope $end
$scope module std_logic_arith $end
$upscope $end
$scope module textio $end
$upscope $end
$scope module std_logic_textio $end
$upscope $end
$scope module testbench $end
$var reg 32 % writedata[31:0] $end
$var reg 32 & dataadr[31:0] $end
$var reg 1 ' clk $end
$var reg 1 ( reset $end
$var reg 1 ) memwrite $end
$scope module dut $end
$var reg 1 * clk $end
$var reg 1 + reset $end
$var reg 32 , writedata[31:0] $end
$var reg 32 - dataadr[31:0] $end
$var reg 1 . memwrite $end
$var reg 32 / pc[31:0] $end
$var reg 32 0 instr[31:0] $end
$var reg 32 1 readdata[31:0] $end
$var reg 1 2 memwrite_s $end
$var reg 32 3 writedata_s[31:0] $end
$var reg 32 4 dataadr_s[31:0] $end
$scope module rvsingle $end
$var reg 1 5 clk $end
$var reg 1 6 reset $end
$var reg 32 7 pc[31:0] $end
$var reg 32 8 instr[31:0] $end
$var reg 1 9 memwrite $end
$var reg 32 : aluresult[31:0] $end
$var reg 32 ; writedata[31:0] $end
$var reg 32 < readdata[31:0] $end
$var reg 1 = alusrc $end
$var reg 1 > regwrite $end
$var reg 1 ? jump $end
$var reg 1 @ zero $end
$var reg 1 A pcsrc $end
$var reg 3 B resultsrc[2:0] $end
$var reg 2 C immsrc[1:0] $end
$var reg 3 D alucontrol[2:0] $end
$scope module c $end
$var reg 7 E op[6:0] $end
$var reg 3 F funct3[2:0] $end
$var reg 1 G funct7b5 $end
$var reg 1 H zero $end
$var reg 3 I resultsrc[2:0] $end
$var reg 1 J memwrite $end
$var reg 1 K pcsrc $end
$var reg 1 L alusrc $end
$var reg 1 M regwrite $end
$var reg 1 N jump $end
$var reg 2 O immsrc[1:0] $end
$var reg 3 P alucontrol[2:0] $end
$var reg 2 Q aluop[1:0] $end
$var reg 1 R branch $end
$var reg 1 S jump_s $end
$scope module md $end
$var reg 7 T op[6:0] $end
$var reg 3 U resultsrc[2:0] $end
$var reg 1 V memwrite $end
$var reg 1 W branch $end
$var reg 1 X alusrc $end
$var reg 1 Y regwrite $end
$var reg 1 Z jump $end
$var reg 2 [ immsrc[1:0] $end
$var reg 2 \ aluop[1:0] $end
$var reg 12 ] controls[11:0] $end
$upscope $end
$scope module ad $end
$var reg 1 ^ opb5 $end
$var reg 3 _ funct3[2:0] $end
$var reg 1 ` funct7b5 $end
$var reg 2 a aluop[1:0] $end
$var reg 3 b alucontrol[2:0] $end
$var reg 1 c rtypesub $end
$upscope $end
$upscope $end
$scope module dp $end
$var reg 1 d clk $end
$var reg 1 e reset $end
$var reg 3 f resultsrc[2:0] $end
$var reg 1 g pcsrc $end
$var reg 1 h alusrc $end
$var reg 1 i regwrite $end
$var reg 2 j immsrc[1:0] $end
$var reg 3 k alucontrol[2:0] $end
$var reg 1 l zero $end
$var reg 32 m pc[31:0] $end
$var reg 32 n instr[31:0] $end
$var reg 32 o aluresult[31:0] $end
$var reg 32 p writedata[31:0] $end
$var reg 32 q readdata[31:0] $end
$var reg 32 r pcnext[31:0] $end
$var reg 32 s pcplus4[31:0] $end
$var reg 32 t pctarget[31:0] $end
$var reg 32 u immext[31:0] $end
$var reg 32 v srca[31:0] $end
$var reg 32 w srcb[31:0] $end
$var reg 32 x result[31:0] $end
$var reg 32 y pc_s[31:0] $end
$var reg 32 z writedata_s[31:0] $end
$var reg 32 { aluresult_s[31:0] $end
$scope module pcreg $end
$var reg 1 | clk $end
$var reg 1 } reset $end
$var reg 32 !" d[31:0] $end
$var reg 32 "" q[31:0] $end
$upscope $end
$scope module pcadd4 $end
$var reg 32 #" a[31:0] $end
$var reg 32 $" b[31:0] $end
$var reg 32 %" y[31:0] $end
$upscope $end
$scope module pcaddbranch $end
$var reg 32 &" a[31:0] $end
$var reg 32 '" b[31:0] $end
$var reg 32 (" y[31:0] $end
$upscope $end
$scope module pcmux $end
$var reg 32 )" d0[31:0] $end
$var reg 32 *" d1[31:0] $end
$var reg 1 +" s $end
$var reg 32 ," y[31:0] $end
$upscope $end
$scope module rf $end
$var reg 1 -" clk $end
$var reg 1 ." we3 $end
$var reg 5 /" a1[4:0] $end
$var reg 5 0" a2[4:0] $end
$var reg 5 1" a3[4:0] $end
$var reg 32 2" wd3[31:0] $end
$var reg 32 3" rd1[31:0] $end
$var reg 32 4" rd2[31:0] $end
$comment mem is not handled $end
$upscope $end
$scope module ext $end
$var reg 25 5" instr[31:7] $end
$var reg 2 6" immsrc[1:0] $end
$var reg 32 7" immext[31:0] $end
$upscope $end
$scope module srcbmux $end
$var reg 32 8" d0[31:0] $end
$var reg 32 9" d1[31:0] $end
$var reg 1 :" s $end
$var reg 32 ;" y[31:0] $end
$upscope $end
$scope module mainalu $end
$var reg 32 <" a[31:0] $end
$var reg 32 =" b[31:0] $end
$var reg 3 >" alucontrol[2:0] $end
$var reg 32 ?" aluresult[31:0] $end
$var reg 1 @" zero $end
$var reg 32 A" condinvb[31:0] $end
$var reg 32 B" sum[31:0] $end
$var reg 32 C" alucontrol_0_tmp[31:0] $end
$var reg 32 D" aluresult_s[31:0] $end
$upscope $end
$scope module resultmux $end
$var reg 32 E" d0[31:0] $end
$var reg 32 F" d1[31:0] $end
$var reg 32 G" d2[31:0] $end
$var reg 32 H" d3[31:0] $end
$var reg 3 I" s[2:0] $end
$var reg 32 J" y[31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module imem1 $end
$var reg 32 K" a[31:0] $end
$var reg 32 L" rd[31:0] $end
$comment i_mem is not handled $end
$upscope $end
$scope module dmem1 $end
$var reg 1 M" clk $end
$var reg 1 N" we $end
$var reg 32 O" a[31:0] $end
$var reg 32 P" wd[31:0] $end
$var reg 32 Q" rd[31:0] $end
$comment d_mem is not handled $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000000 !
b00000000000000000000000000000000 "
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b00000000000000000000000000001011 &
1'
1(
0)
1*
1+
b00000000000000000000000000000000 ,
b00000000000000000000000000001011 -
0.
b00000000000000000000000000000000 /
b00000000101100000000010100010011 0
b00000000000000000000000000000000 1
02
b00000000000000000000000000000000 3
b00000000000000000000000000001011 4
15
16
b00000000000000000000000000000000 7
b00000000101100000000010100010011 8
09
b00000000000000000000000000001011 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
1=
1>
0?
0@
0A
b000 B
b00 C
b000 D
b0010011 E
b000 F
0G
0H
b000 I
0J
0K
1L
1M
0N
b00 O
b000 P
b10 Q
0R
0S
b0010011 T
b000 U
0V
0W
1X
1Y
0Z
b00 [
b10 \
b100100000100 ]
0^
b000 _
0`
b10 a
b000 b
0c
1d
1e
b000 f
0g
1h
1i
b00 j
b000 k
0l
b00000000000000000000000000000000 m
b00000000101100000000010100010011 n
b00000000000000000000000000001011 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000100 r
b00000000000000000000000000000100 s
b00000000000000000000000000001011 t
b00000000000000000000000000001011 u
b00000000000000000000000000000000 v
b00000000000000000000000000001011 w
b00000000000000000000000000001011 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000001011 {
1|
1}
b00000000000000000000000000000100 !"
b00000000000000000000000000000000 ""
b00000000000000000000000000000000 #"
b00000000000000000000000000000100 $"
b00000000000000000000000000000100 %"
b00000000000000000000000000000000 &"
b00000000000000000000000000001011 '"
b00000000000000000000000000001011 ("
b00000000000000000000000000000100 )"
b00000000000000000000000000001011 *"
0+"
b00000000000000000000000000000100 ,"
1-"
1."
b00000 /"
b01011 0"
b01010 1"
b00000000000000000000000000001011 2"
b00000000000000000000000000000000 3"
b00000000000000000000000000000000 4"
b0000000010110000000001010 5"
b00 6"
b00000000000000000000000000001011 7"
b00000000000000000000000000000000 8"
b00000000000000000000000000001011 9"
1:"
b00000000000000000000000000001011 ;"
b00000000000000000000000000000000 <"
b00000000000000000000000000001011 ="
b000 >"
b00000000000000000000000000001011 ?"
0@"
b00000000000000000000000000001011 A"
b00000000000000000000000000001011 B"
b00000000000000000000000000000000 C"
b00000000000000000000000000001011 D"
b00000000000000000000000000001011 E"
b00000000000000000000000000000000 F"
b00000000000000000000000000000100 G"
b00000000000000000000000000000100 H"
b000 I"
b00000000000000000000000000001011 J"
b00000000000000000000000000000000 K"
b00000000101100000000010100010011 L"
1M"
0N"
b00000000000000000000000000001011 O"
b00000000000000000000000000000000 P"
b00000000000000000000000000000000 Q"
#5000000
0'
0*
05
0d
0|
0-"
0M"
#10000000
1'
1*
15
1d
1|
1-"
1M"
#15000000
0'
0*
05
0d
0|
0-"
0M"
#20000000
1'
1*
15
1d
1|
1-"
1M"
#22000000
0(
0+
06
0e
0}
#25000000
0'
0*
05
0d
0|
0-"
0M"
#30000000
b00000000000000000000000000010110 &
1'
1*
b00000000000000000000000000010110 -
b00000000000000000000000000000100 /
b00000001011000000000010110010011 0
b00000000000000000000000000010110 4
15
b00000000000000000000000000000100 7
b00000001011000000000010110010011 8
b00000000000000000000000000010110 :
1d
b00000000000000000000000000000100 m
b00000001011000000000010110010011 n
b00000000000000000000000000010110 o
b00000000000000000000000000001000 r
b00000000000000000000000000001000 s
b00000000000000000000000000011010 t
b00000000000000000000000000010110 u
b00000000000000000000000000010110 w
b00000000000000000000000000010110 x
b00000000000000000000000000000100 y
b00000000000000000000000000010110 {
1|
b00000000000000000000000000001000 !"
b00000000000000000000000000000100 ""
b00000000000000000000000000000100 #"
b00000000000000000000000000001000 %"
b00000000000000000000000000000100 &"
b00000000000000000000000000010110 '"
b00000000000000000000000000011010 ("
b00000000000000000000000000001000 )"
b00000000000000000000000000011010 *"
b00000000000000000000000000001000 ,"
1-"
b10110 0"
b01011 1"
b00000000000000000000000000010110 2"
b0000000101100000000001011 5"
b00000000000000000000000000010110 7"
b00000000000000000000000000010110 9"
b00000000000000000000000000010110 ;"
b00000000000000000000000000010110 ="
b00000000000000000000000000010110 ?"
b00000000000000000000000000010110 A"
b00000000000000000000000000010110 B"
b00000000000000000000000000010110 D"
b00000000000000000000000000010110 E"
b00000000000000000000000000001000 G"
b00000000000000000000000000001000 H"
b00000000000000000000000000010110 J"
b00000000000000000000000000000100 K"
b00000001011000000000010110010011 L"
1M"
b00000000000000000000000000010110 O"
#35000000
0'
0*
05
0d
0|
0-"
0M"
#40000000
b00000000000000000000000000011001 &
1'
1*
b00000000000000000000000000011001 -
b00000000000000000000000000001000 /
b00000001100100000000011000010011 0
b00000000000000000000000000011001 4
15
b00000000000000000000000000001000 7
b00000001100100000000011000010011 8
b00000000000000000000000000011001 :
1d
b00000000000000000000000000001000 m
b00000001100100000000011000010011 n
b00000000000000000000000000011001 o
b00000000000000000000000000001100 r
b00000000000000000000000000001100 s
b00000000000000000000000000100001 t
b00000000000000000000000000011001 u
b00000000000000000000000000011001 w
b00000000000000000000000000011001 x
b00000000000000000000000000001000 y
b00000000000000000000000000011001 {
1|
b00000000000000000000000000001100 !"
b00000000000000000000000000001000 ""
b00000000000000000000000000001000 #"
b00000000000000000000000000001100 %"
b00000000000000000000000000001000 &"
b00000000000000000000000000011001 '"
b00000000000000000000000000100001 ("
b00000000000000000000000000001100 )"
b00000000000000000000000000100001 *"
b00000000000000000000000000001100 ,"
1-"
b11001 0"
b01100 1"
b00000000000000000000000000011001 2"
b0000000110010000000001100 5"
b00000000000000000000000000011001 7"
b00000000000000000000000000011001 9"
b00000000000000000000000000011001 ;"
b00000000000000000000000000011001 ="
b00000000000000000000000000011001 ?"
b00000000000000000000000000011001 A"
b00000000000000000000000000011001 B"
b00000000000000000000000000011001 D"
b00000000000000000000000000011001 E"
b00000000000000000000000000001100 G"
b00000000000000000000000000001100 H"
b00000000000000000000000000011001 J"
b00000000000000000000000000001000 K"
b00000001100100000000011000010011 L"
1M"
b00000000000000000000000000011001 O"
#45000000
0'
0*
05
0d
0|
0-"
0M"
#50000000
b00000000000000000000000000011001 %
b00000000000000000000000001100100 &
1'
1)
1*
b00000000000000000000000000011001 ,
b00000000000000000000000001100100 -
1.
b00000000000000000000000000001100 /
b00000110110000000010001000100011 0
12
b00000000000000000000000000011001 3
b00000000000000000000000001100100 4
15
b00000000000000000000000000001100 7
b00000110110000000010001000100011 8
19
b00000000000000000000000001100100 :
b00000000000000000000000000011001 ;
0>
0@
b01 C
b000 D
b0100011 E
b010 F
0H
b000 I
1J
1L
0M
b01 O
b000 P
b00 Q
b0100011 T
b000 U
1V
0W
1X
0Y
0Z
b01 [
b00 \
b001110000000 ]
1^
b010 _
b00 a
b000 b
1d
0i
b01 j
b000 k
0l
b00000000000000000000000000001100 m
b00000110110000000010001000100011 n
b00000000000000000000000001100100 o
b00000000000000000000000000011001 p
b00000000000000000000000000010000 r
b00000000000000000000000000010000 s
b00000000000000000000000001110000 t
b00000000000000000000000001100100 u
b00000000000000000000000001100100 w
b00000000000000000000000001100100 x
b00000000000000000000000000001100 y
b00000000000000000000000000011001 z
b00000000000000000000000001100100 {
1|
b00000000000000000000000000010000 !"
b00000000000000000000000000001100 ""
b00000000000000000000000000001100 #"
b00000000000000000000000000010000 %"
b00000000000000000000000000001100 &"
b00000000000000000000000001100100 '"
b00000000000000000000000001110000 ("
b00000000000000000000000000010000 )"
b00000000000000000000000001110000 *"
b00000000000000000000000000010000 ,"
1-"
0."
b01100 0"
b00100 1"
b00000000000000000000000001100100 2"
b00000000000000000000000000011001 4"
b0000011011000000001000100 5"
b01 6"
b00000000000000000000000001100100 7"
b00000000000000000000000000011001 8"
b00000000000000000000000001100100 9"
b00000000000000000000000001100100 ;"
b00000000000000000000000001100100 ="
b000 >"
b00000000000000000000000001100100 ?"
0@"
b00000000000000000000000001100100 A"
b00000000000000000000000001100100 B"
b00000000000000000000000000000000 C"
b00000000000000000000000001100100 D"
b00000000000000000000000001100100 E"
b00000000000000000000000000010000 G"
b00000000000000000000000000010000 H"
b00000000000000000000000001100100 J"
b00000000000000000000000000001100 K"
b00000110110000000010001000100011 L"
1M"
1N"
b00000000000000000000000001100100 O"
b00000000000000000000000000011001 P"
